# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class DateAnnotationAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format=None):  # noqa: E501
        """DateAnnotationAllOf - a model defined in OpenAPI

        :param format: The format of this DateAnnotationAllOf.  # noqa: E501
        :type format: str
        """
        self.openapi_types = {
            'format': str
        }

        self.attribute_map = {
            'format': 'format'
        }

        self._format = format

    @classmethod
    def from_dict(cls, dikt) -> 'DateAnnotationAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DateAnnotation_allOf of this DateAnnotationAllOf.  # noqa: E501
        :rtype: DateAnnotationAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this DateAnnotationAllOf.

        Date format (ISO 8601)  # noqa: E501

        :return: The format of this DateAnnotationAllOf.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this DateAnnotationAllOf.

        Date format (ISO 8601)  # noqa: E501

        :param format: The format of this DateAnnotationAllOf.
        :type format: str
        """

        self._format = format
