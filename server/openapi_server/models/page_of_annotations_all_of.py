# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.annotation import Annotation
from openapi_server import util

from openapi_server.models.annotation import Annotation  # noqa: E501

class PageOfAnnotationsAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations=None):  # noqa: E501
        """PageOfAnnotationsAllOf - a model defined in OpenAPI

        :param annotations: The annotations of this PageOfAnnotationsAllOf.  # noqa: E501
        :type annotations: List[Annotation]
        """
        self.openapi_types = {
            'annotations': List[Annotation]
        }

        self.attribute_map = {
            'annotations': 'annotations'
        }

        self._annotations = annotations

    @classmethod
    def from_dict(cls, dikt) -> 'PageOfAnnotationsAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PageOfAnnotations_allOf of this PageOfAnnotationsAllOf.  # noqa: E501
        :rtype: PageOfAnnotationsAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this PageOfAnnotationsAllOf.

        An array of annotations  # noqa: E501

        :return: The annotations of this PageOfAnnotationsAllOf.
        :rtype: List[Annotation]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this PageOfAnnotationsAllOf.

        An array of annotations  # noqa: E501

        :param annotations: The annotations of this PageOfAnnotationsAllOf.
        :type annotations: List[Annotation]
        """

        self._annotations = annotations
