openapi: 3.0.2
info:
  contact:
    email: thomas.schaffter@sagebionetworks.org
    name: The NLP Sandbox Team
    url: https://nlpsandbox.github.io/nlpsandbox-schemas
  description: |
    The OpenAPI specification implemented by NLP Sandbox Data Nodes.
    # Overview
    A NLP Sandbox Data Node is a repository of clinical notes that implements this OpenAPI specification so that other services in the NLP Sandbox ecosystem can access them. For example, a client requests data from a Data Node before passing them as input to an NLP Tool like a Date Annotator, Person Name Annotator, etc.
    For the sake of benchmarking NLP Tool, a Data Node can also give access to the gold standard that the NLP Tool is expected to infer (e.g. annotations).
  license:
    name: Apache 2.0
    url: https://nlpsandbox.github.io/nlpsandbox-schemas/blob/develop/LICENSE
  title: NLP Sandbox Data Node API
  version: 0.3.0
  x-logo:
    url: https://nlpsandbox.github.io/nlpsandbox-schemas/logo.png
servers:
- url: '{protocol}://example.com/api/v1'
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
tags:
- description: Operations about annotations
  name: Annotation
- description: Operations about annotation stores
  name: AnnotationStore
- description: Operations about datasets
  name: Dataset
- description: Operations about FHIR stores
  name: FhirStore
- description: Operations about health checks
  name: HealthCheck
- description: Operations about notes
  name: Note
- description: Operations about patients
  name: Patient
- description: Operations about this service
  name: Service
paths:
  /datasets:
    get:
      description: Returns the datasets
      operationId: list_datasets
      parameters:
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfDatasets'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get all datasets
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
    post:
      description: Create a dataset with the name specified
      operationId: create_dataset
      parameters:
      - description: The ID of the dataset that is being created
        explode: true
        in: query
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Create a dataset
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
  /datasets/{datasetId}:
    delete:
      description: Deletes the dataset for a given ID
      operationId: delete_dataset
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Delete a dataset by ID
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
    get:
      description: Returns the dataset for a given ID
      operationId: get_dataset
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a dataset by ID
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
  /datasets/{datasetId}/annotationStores:
    get:
      description: Returns the annotation stores
      operationId: list_annotation_stores
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnnotationStores'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List the annotation stores in a dataset
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
    post:
      description: Create an annotation store with the ID specified
      operationId: create_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store that is being created.
        explode: true
        in: query
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationStoreCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStoreCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Create an annotation store
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
  /datasets/{datasetId}/annotationStores/{annotationStoreId}:
    delete:
      description: Deletes the annotation store specified
      operationId: delete_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Delete an annotation store
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
    get:
      description: Returns the annotation store specified
      operationId: get_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStore'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get an annotation store
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
  /datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations:
    get:
      description: Returns the annotations in an annotation store
      operationId: list_annotations
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnnotations'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List the annotations in an annotation store
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    post:
      description: Create an annotation
      operationId: create_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Create an annotation
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}:
    delete:
      description: Deletes the annotation specified
      operationId: delete_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the annotation
        explode: false
        in: path
        name: annotationId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Delete an annotation
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    get:
      description: Returns the annotation specified
      operationId: get_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the annotation
        explode: false
        in: path
        name: annotationId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get an annotation
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /datasets/{datasetId}/fhirStores:
    get:
      description: Returns the FHIR stores
      operationId: list_fhir_stores
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfFhirStores'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List the FHIR stores in a dataset
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
    post:
      description: Create a FHIR store with the ID specified
      operationId: create_fhir_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store that is being created.
        explode: true
        in: query
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FhirStoreCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FhirStoreCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Create a FHIR store
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}:
    delete:
      description: Deletes the FHIR store specified
      operationId: delete_fhir_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Delete a FHIR store
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
    get:
      description: Returns the FHIR store specified
      operationId: get_fhir_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FhirStore'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a FHIR store
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Note:
    get:
      description: Returns the notes in a FHIR store
      operationId: list_notes
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfNotes'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List notes
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    post:
      description: Create a note
      operationId: create_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Create a note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Note/{noteId}:
    delete:
      description: Deletes the note specified
      operationId: delete_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the note
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          $ref: '#/components/schemas/NoteResourceId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Delete a note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    get:
      description: Returns the note specified
      operationId: get_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the note
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          $ref: '#/components/schemas/NoteResourceId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient:
    get:
      description: Returns the Patients in a FHIR store
      operationId: list_patients
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfPatients'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List the Patients in a FHIR store
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
    post:
      description: Create a FHIR patient
      operationId: create_patient
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Create a FHIR patient
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient/{patientId}:
    delete:
      description: Deletes the FHIR patient specified
      operationId: delete_patient
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the FHIR patient
        explode: false
        in: path
        name: patientId
        required: true
        schema:
          $ref: '#/components/schemas/PatientResourceId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Delete a FHIR patient
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
    get:
      description: Returns the FHIR patient specified
      operationId: get_patient
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the FHIR patient
        explode: false
        in: path
        name: patientId
        required: true
        schema:
          $ref: '#/components/schemas/PatientResourceId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a FHIR patient
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
  /healthCheck:
    get:
      description: Get information about the health of the service
      operationId: get_health_check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get health check information
      tags:
      - HealthCheck
      x-openapi-router-controller: openapi_server.controllers.health_check_controller
  /service:
    get:
      description: Get information about the service
      operationId: get_service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get service information
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
components:
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request cannot be fulfilled due to an unexpected server error
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request conflicts with current state of the target resource
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
  schemas:
    PageLimit:
      default: 10
      description: Maximum number of results returned
      maximum: 100
      minimum: 10
      type: integer
    PageOffset:
      default: 0
      description: Index of the first result that must be returned
      minimum: 0
      type: integer
    ResponsePageMetadata:
      description: A page of results
      properties:
        offset:
          default: 0
          description: Index of the first result that must be returned
          minimum: 0
          type: integer
        limit:
          default: 10
          description: Maximum number of results returned
          maximum: 100
          minimum: 10
          type: integer
        links:
          $ref: '#/components/schemas/ResponsePageMetadata_links'
      required:
      - limit
      - links
      - offset
      type: object
    DatasetName:
      description: The name of the dataset
      example: datasets/awesome-dataset
      type: string
    Dataset:
      description: A dataset
      example:
        name: datasets/awesome-dataset
      properties:
        name:
          description: The name of the dataset
          example: datasets/awesome-dataset
          type: string
      type: object
    PageOfDatasets:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfDatasets_allOf'
      description: A page of datasets
      type: object
    Error:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
    DatasetId:
      description: The ID of the dataset
      example: awesome-dataset
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    DatasetCreateRequest:
      description: An empty object
      type: object
    DatasetCreateResponse:
      description: The reference of the dataset created
      example:
        name: datasets/awesome-dataset
      properties:
        name:
          description: The name of the dataset
          example: datasets/awesome-dataset
          type: string
      type: object
    EmptyObject:
      description: An empty object
      type: object
    AnnotationStore:
      description: An annotation store
      example:
        name: name
      properties:
        name:
          description: Resource name of the annotation store, of the form datasets/{datasetId}/annotationStore/{annotationStoreId}
          readOnly: true
          type: string
      type: object
    PageOfAnnotationStores:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfAnnotationStores_allOf'
      description: A page of annotation stores
      type: object
    AnnotationStoreId:
      description: The ID of the annotation store
      example: awesome-annotation-store
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    AnnotationStoreCreateRequest:
      description: An empty object
      type: object
    AnnotationStoreName:
      description: The resource name of the annotation store, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}
      example: datasets/awesome-dataset/annotationStores/awesome-annotation-store
      type: string
    AnnotationStoreCreateResponse:
      description: The reference to the annotation store created
      example:
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store
      properties:
        name:
          description: The resource name of the annotation store, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store
          type: string
      type: object
    AnnotationName:
      description: Resource name of the annotation record, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
      example: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/507f1f77bcf86cd799439011
      type: string
    ResourceSource:
      description: An API resource source
      example:
        name: name
      properties:
        name:
          description: Full path of an API resource
          type: string
      type: object
    AnnotationSource:
      description: The source of an annotation record
      example:
        resourceSource:
          name: name
      properties:
        resourceSource:
          $ref: '#/components/schemas/ResourceSource'
      type: object
    TextAnnotation:
      description: An annotation in a text
      properties:
        start:
          description: The position of the first character
          example: 42
          type: integer
        length:
          description: The length of the annotation
          example: 10
          type: integer
        text:
          description: The string annotated
          type: string
        confidence:
          description: The confidence in the accuracy of the annotation
          example: 95
          format: float
          maximum: 100
          minimum: 0
          type: number
      required:
      - length
      - start
      type: object
    TextDateAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextDateAnnotation_allOf'
      description: A date annotation in a text
      example:
        start: 42
        length: 10
        text: 10/26/2020
        dateFormat: MM/DD/YYYY
      type: object
    TextPersonNameAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      description: A person name annotation in a text
      example:
        start: 42
        length: 11
        text: Chloe Price
      type: object
    TextPhysicalAddressAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextPhysicalAddressAnnotation_allOf'
      description: A person name annotation in a text
      example:
        start: 42
        length: 11
        text: Seattle
        addressType: city
      type: object
    Annotation:
      description: An annotation record
      example:
        textDateAnnotations:
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
        textPersonNameAnnotations:
        - start: 42
          length: 11
          text: Chloe Price
        - start: 42
          length: 11
          text: Chloe Price
        textPhysicalAddressAnnotations:
        - start: 42
          length: 11
          text: Seattle
          addressType: city
        - start: 42
          length: 11
          text: Seattle
          addressType: city
        annotationSource:
          resourceSource:
            name: name
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/507f1f77bcf86cd799439011
      properties:
        name:
          description: Resource name of the annotation record, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/507f1f77bcf86cd799439011
          type: string
        annotationSource:
          $ref: '#/components/schemas/AnnotationSource'
        textDateAnnotations:
          description: Date annotations in a text
          items:
            $ref: '#/components/schemas/TextDateAnnotation'
          type: array
        textPersonNameAnnotations:
          description: Person name annotations in a text
          items:
            $ref: '#/components/schemas/TextPersonNameAnnotation'
          type: array
        textPhysicalAddressAnnotations:
          description: Physical address annotations in a text
          items:
            $ref: '#/components/schemas/TextPhysicalAddressAnnotation'
          type: array
      type: object
    PageOfAnnotations:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfAnnotations_allOf'
      description: A page of annotations
      type: object
    AnnotationCreateRequest:
      description: An annotation record
      example:
        textDateAnnotations:
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
        textPersonNameAnnotations:
        - start: 42
          length: 11
          text: Chloe Price
        - start: 42
          length: 11
          text: Chloe Price
        textPhysicalAddressAnnotations:
        - start: 42
          length: 11
          text: Seattle
          addressType: city
        - start: 42
          length: 11
          text: Seattle
          addressType: city
        annotationSource:
          resourceSource:
            name: name
      properties:
        annotationSource:
          $ref: '#/components/schemas/AnnotationSource'
        textDateAnnotations:
          description: Date annotations in a text
          items:
            $ref: '#/components/schemas/TextDateAnnotation'
          type: array
        textPersonNameAnnotations:
          description: Person name annotations in a text
          items:
            $ref: '#/components/schemas/TextPersonNameAnnotation'
          type: array
        textPhysicalAddressAnnotations:
          description: Physical address annotations in a text
          items:
            $ref: '#/components/schemas/TextPhysicalAddressAnnotation'
          type: array
      type: object
    AnnotationCreateResponse:
      description: The reference to the annotation created
      example:
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/507f1f77bcf86cd799439011
      properties:
        name:
          description: Resource name of the annotation record, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/507f1f77bcf86cd799439011
          type: string
      type: object
    FhirStoreId:
      description: The ID of the FHIR store
      example: awesome-fhir-store
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    AnnotationId:
      description: The ID of the annotation
      example: 507f1f77bcf86cd799439011
      type: string
    FhirStore:
      description: A FHIR store
      example:
        name: name
      properties:
        name:
          description: Resource name of the FHIR store, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}
          readOnly: true
          type: string
      type: object
    PageOfFhirStores:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfFhirStores_allOf'
      description: A page of FHIR stores
      type: object
    FhirStoreCreateRequest:
      description: An empty object
      type: object
    FhirStoreName:
      description: The resource name of the FHIR store, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}
      example: datasets/awesome-dataset/fhirStores/awesome-fhir-store
      type: string
    FhirStoreCreateResponse:
      description: The reference to the FHIR store created
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store
      properties:
        name:
          description: The resource name of the FHIR store, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store
          type: string
      type: object
    PatientResourceId:
      description: The ID of the FHIR patient
      example: 507f1f77bcf86cd799439011
      type: string
    Patient:
      description: A FHIR patient
      example:
        identifier: identifier
        gender: male
        id: 507f1f77bcf86cd799439011
      properties:
        id:
          description: The ID of the FHIR patient
          example: 507f1f77bcf86cd799439011
          type: string
        identifier:
          description: An identifier for this patient
          type: string
        gender:
          description: Gender of the patient
          enum:
          - male
          - female
          - other
          - unknown
          type: string
      type: object
    PageOfPatients:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfPatients_allOf'
      description: A page of FHIR patients
      type: object
    PatientCreateRequest:
      description: A FHIR patient
      example:
        identifier: identifier
        gender: male
      properties:
        identifier:
          description: An identifier for this patient
          type: string
        gender:
          description: Gender of the patient
          enum:
          - male
          - female
          - other
          - unknown
          type: string
      type: object
    PatientResourceName:
      description: The resource name of the FHIR patient, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Patient/{PatientId}
      example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Patient/507f1f77bcf86cd799439011
      type: string
    PatientCreateResponse:
      description: The reference to the patient created
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Patient/507f1f77bcf86cd799439011
      properties:
        name:
          description: The resource name of the FHIR patient, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Patient/{PatientId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Patient/507f1f77bcf86cd799439011
          type: string
      type: object
    NoteResourceId:
      description: The ID of the clinical note
      example: 507f1f77bcf86cd799439011
      type: string
    Note:
      description: A clinical note
      example:
        noteType: loinc:LP29684-5
        patientId: 507f1f77bcf86cd799439011
        id: 507f1f77bcf86cd799439011
        text: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott.
      properties:
        id:
          description: The ID of the clinical note
          example: 507f1f77bcf86cd799439011
          type: string
        text:
          description: The content of the clinical note
          example: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott.
          type: string
        noteType:
          description: The note type (LOINC concept)
          example: loinc:LP29684-5
          type: string
        patientId:
          description: The ID of the FHIR patient
          example: 507f1f77bcf86cd799439011
          type: string
      required:
      - noteType
      - text
      type: object
    PageOfNotes:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfNotes_allOf'
      description: A page of notes
      type: object
    NoteCreateRequest:
      description: A clinical note
      example:
        noteType: loinc:LP29684-5
        patientId: 507f1f77bcf86cd799439011
        text: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott.
      properties:
        text:
          description: The content of the clinical note
          example: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott.
          type: string
        noteType:
          description: The note type (LOINC concept)
          example: loinc:LP29684-5
          type: string
        patientId:
          description: The ID of the FHIR patient
          example: 507f1f77bcf86cd799439011
          type: string
      required:
      - noteType
      - text
      type: object
    NoteResourceName:
      description: The resource name of the clinical note, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Note/{NoteId}
      example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Note/507f1f77bcf86cd799439011
      type: string
    NoteCreateResponse:
      description: The reference to the note created
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Note/507f1f77bcf86cd799439011
      properties:
        name:
          description: The resource name of the clinical note, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Note/{NoteId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Note/507f1f77bcf86cd799439011
          type: string
      type: object
    HealthCheck:
      description: Represents the health of a service
      example:
        status: pass
      properties:
        status:
          description: Indicates whether the service status is acceptable or not
          enum:
          - pass
          - fail
          - warn
          type: string
      required:
      - status
      type: object
    Service:
      description: Information about an NLP service
      example:
        license: apache-2.0
        authorEmail: author@example.com
        author: Example Author
        name: awesome-date-annotator
        description: An awesome Date Annotator based on regex patterns
        repository: github:awesome-org/awesome-date-annotator
        version: 1.0.0
        url: https://openapi-generator.tech
      properties:
        name:
          description: The service name
          example: awesome-date-annotator
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        version:
          description: The version of the service (SemVer string)
          example: 1.0.0
          minLength: 1
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
        license:
          description: The license of this service (spdx.org/licenses Identifier)
          enum:
          - afl-3.0
          - apache-2.0
          - artistic-2.0
          - bsl-1.0
          - bsd-2-clause
          - bsd-3-clause
          - bsd-3-clause-clear
          - cc
          - cc0-1.0
          - cc-by-4.0
          - cc-by-sa-4.0
          - wtfpl
          - ecl-2.0
          - epl-1.0
          - epl-2.0
          - eupl-1.1
          - agpl-3.0
          - gpl
          - gpl-2.0
          - gpl-3.0
          - lgpl
          - lgpl-2.1
          - lgpl-3.0
          - isc
          - lppl-1.3c
          - ms-pl
          - mit
          - mpl-2.0
          - osl-3.0
          - postgresql
          - ofl-1.1
          - ncsa
          - unlicense
          - zlib
          example: apache-2.0
          type: string
        repository:
          description: The place where the code lives
          example: github:awesome-org/awesome-date-annotator
          type: string
        description:
          description: A short, one-sentence summary of the service
          example: An awesome Date Annotator based on regex patterns
          maxLength: 100
          type: string
        author:
          description: The author of the service
          example: Example Author
          type: string
        authorEmail:
          description: The email address of the author
          example: author@example.com
          format: email
          type: string
        url:
          description: The URL to the homepage of the service
          format: uri
          type: string
      type: object
    ResponsePageMetadata_links:
      description: Links to navigate to different pages of results
      properties:
        next:
          description: Link to the next page of results
          format: uri
          type: string
      type: object
    PageOfDatasets_allOf:
      properties:
        datasets:
          description: An array of datasets
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
      type: object
    PageOfAnnotationStores_allOf:
      properties:
        annotationStores:
          description: An array of annotation stores
          items:
            $ref: '#/components/schemas/AnnotationStore'
          type: array
      type: object
    TextDateAnnotation_allOf:
      properties:
        dateFormat:
          description: Date format (ISO 8601)
          example: MM/DD/YYYY
          type: string
      type: object
    TextPhysicalAddressAnnotation_allOf:
      properties:
        addressType:
          description: Type of address information
          enum:
          - city
          - country
          - department
          - hospital
          - organization
          - other
          - room
          - state
          - street
          - zip
          type: string
      type: object
    PageOfAnnotations_allOf:
      properties:
        annotations:
          description: An array of annotations
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      type: object
    PageOfFhirStores_allOf:
      properties:
        fhirStores:
          description: An array of FHIR stores
          items:
            $ref: '#/components/schemas/FhirStore'
          type: array
      type: object
    PageOfPatients_allOf:
      properties:
        patients:
          description: An array of FHIR patients
          items:
            $ref: '#/components/schemas/Patient'
          type: array
      type: object
    PageOfNotes_allOf:
      properties:
        notes:
          description: An array of notes
          items:
            $ref: '#/components/schemas/Note'
          type: array
      type: object
