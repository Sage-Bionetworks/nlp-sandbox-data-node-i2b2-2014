openapi: 3.0.2
info:
  contact:
    email: thomas.schaffter@sagebionetworks.org
    name: The NLP Sandbox Team
    url: https://Sage-Bionetworks.github.io/nlp-sandbox-schemas
  description: |
    The OpenAPI specification implemented by NLP Sandbox Data Nodes.
    # Overview
    A NLP Sandbox Data Node is a repository of clinical notes that implements this OpenAPI specification so that other services in the NLP Sandbox ecosystem can access them. For example, a client requests data from a Data Node before passing them as input to an NLP Tool like a Date Annotator, Person Name Annotator, etc.
    For the sake of benchmarking NLP Tool, a Data Node can also give access to the gold standard that the NLP Tool is expected to infer (e.g. annotations).
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/nlp-sandbox/blob/main/LICENSE
  title: NLP Sandbox Data Node API
  version: 0.1.6
  x-logo:
    url: https://Sage-Bionetworks.github.io/nlp-sandbox-schemas/logo.png
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
tags:
- description: Operations about annotations
  name: Annotation
- description: Operations about annotation stores
  name: AnnotationStore
- description: Operations about datasets
  name: Dataset
- description: Operations about service health
  name: Health
- description: Operations about note stores
  name: NoteStore
- description: Operations about notes
  name: Note
- description: Operations about NLP services
  name: Service
paths:
  /datasets:
    get:
      description: Returns the datasets
      operationId: list_datasets
      parameters:
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfDatasets'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get all datasets
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
    post:
      description: Create a dataset with the name specified
      operationId: create_dataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a dataset
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
  /datasets/{datasetId}/annotationStore:
    get:
      description: Returns the annotation stores for a given dataset ID
      operationId: list_annotation_stores
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnnotationStores'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get all annotation stores by dataset ID
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
    post:
      description: Create an annotation store with the name specified
      operationId: create_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationStore'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStore'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create an annotation store linked to a dataset ID
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
  /datasets/{datasetId}/annotationStore/{id}:
    delete:
      description: Deletes the annotation store for a given ID
      operationId: delete_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStore'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete an annotation store by ID
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
    get:
      description: Returns the annotation store for a given ID
      operationId: get_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStore'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get an annotation store by ID
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
  /datasets/{datasetId}/annotationStore/{storeId}/annotations:
    get:
      description: Returns the annotations for a given dataset ID and store ID
      operationId: list_annotations
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnnotations'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get all annotations linked to a dataset ID and store ID
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    post:
      description: Create an annotation
      operationId: create_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/StoredAnnotation'
              - $ref: '#/components/schemas/StoredDateAnnotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/StoredAnnotation'
                - $ref: '#/components/schemas/StoredDateAnnotation'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create an annotation linked to a dataset ID and store ID
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /datasets/{datasetId}/annotationStore/{storeId}/annotations/{id}:
    delete:
      description: Deletes the annotation for a given ID
      operationId: delete_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the dataset to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/StoredAnnotation'
                - $ref: '#/components/schemas/StoredDateAnnotation'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete an annotation by ID
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    get:
      description: Returns the annotation for a given ID
      operationId: get_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the annotation to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/StoredAnnotation'
                - $ref: '#/components/schemas/StoredDateAnnotation'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get an annotation by ID
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /datasets/{datasetId}/noteStore:
    get:
      description: Returns the note stores for a given dataset ID
      operationId: list_note_stores
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfNoteStores'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get all note stores by dataset ID
      tags:
      - NoteStore
      x-openapi-router-controller: openapi_server.controllers.note_store_controller
    post:
      description: Create a note store with the name specified
      operationId: create_note_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteStore'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteStore'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a note store linked to a dataset ID
      tags:
      - NoteStore
      x-openapi-router-controller: openapi_server.controllers.note_store_controller
  /datasets/{datasetId}/noteStore/{id}:
    delete:
      description: Deletes the note store for a given ID
      operationId: delete_note_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the note store
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteStore'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a note store by ID
      tags:
      - NoteStore
      x-openapi-router-controller: openapi_server.controllers.note_store_controller
    get:
      description: Returns the note store for a given ID
      operationId: get_note_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the note store
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteStore'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a note store by ID
      tags:
      - NoteStore
      x-openapi-router-controller: openapi_server.controllers.note_store_controller
  /datasets/{datasetId}/noteStore/{storeId}/notes:
    get:
      description: Returns the notes for a given dataset ID and store ID
      operationId: list_notes
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfNotes'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get all notes linked to a dataset ID and store ID
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    post:
      description: Create a note
      operationId: create_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Create a note linked to a dataset ID and store ID
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /datasets/{datasetId}/noteStore/{storeId}/notes/{id}:
    delete:
      description: Deletes the note for a given ID
      operationId: delete_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the note
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete an note by ID
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    get:
      description: Returns the note for a given ID
      operationId: get_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the store
        explode: false
        in: path
        name: storeId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the note
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a note by ID
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /datasets/{id}:
    delete:
      description: Deletes the dataset for a given ID
      operationId: delete_dataset
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Delete a dataset by ID
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
    get:
      description: Returns the dataset for a given ID
      operationId: get_dataset
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get a dataset by ID
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
  /health:
    get:
      description: Get the health of the API
      operationId: health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get Health
      tags:
      - Health
      x-openapi-router-controller: openapi_server.controllers.health_controller
  /service:
    get:
      description: Get information about the service
      operationId: service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
      summary: Get service information
      tags:
      - Service
      x-openapi-router-controller: openapi_server.controllers.service_controller
components:
  responses:
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
  schemas:
    PageResponse:
      description: A page of results
      properties:
        offset:
          description: Index of the first result that must be returned
          type: integer
        limit:
          description: Maximum number of results returned
          type: integer
        links:
          $ref: '#/components/schemas/PageResponse_links'
      required:
      - limit
      - links
      - offset
      type: object
    Dataset:
      description: A dataset
      example:
        name: awesome-dataset
      properties:
        name:
          description: The name of the dataset
          example: awesome-dataset
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      type: object
    PageOfDatasets:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - $ref: '#/components/schemas/PageOfDatasets_allOf'
      description: A page of datasets
      type: object
    Error:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
    AnnotationStore:
      description: An annotation store
      example:
        name: awesome-annotation-store
        datasetId: datasetId
      properties:
        name:
          description: The name of the store
          example: awesome-annotation-store
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        datasetId:
          description: The ID of the dataset
          type: string
      type: object
    PageOfAnnotationStores:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - $ref: '#/components/schemas/PageOfAnnotationStores_allOf'
      description: A page of annotation stores
      type: object
    Annotation:
      description: An annotation in a text
      properties:
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
      required:
      - length
      - start
      type: object
    StoredAnnotation:
      allOf:
      - $ref: '#/components/schemas/Annotation'
      - $ref: '#/components/schemas/StoredAnnotation_allOf'
      description: A annotation in a text
      # required:
      # - noteId
      type: object
    DateAnnotation:
      allOf:
      - $ref: '#/components/schemas/Annotation'
      - $ref: '#/components/schemas/DateAnnotation_allOf'
      description: A date annotation in a text
      type: object
    StoredDateAnnotation:
      allOf:
      - $ref: '#/components/schemas/DateAnnotation'
      - $ref: '#/components/schemas/StoredAnnotation_allOf'
      description: A date annotation in a text
      # required:
      # - noteId
      type: object
    PageOfAnnotations:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - $ref: '#/components/schemas/PageOfAnnotations_allOf'
      description: A page of annotations
      type: object
    NoteStore:
      description: A note store
      example:
        name: awesome-note-store
        datasetId: datasetId
      properties:
        name:
          description: The name of the store
          example: awesome-note-store
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        datasetId:
          description: The ID of the dataset
          type: string
      type: object
    PageOfNoteStores:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - $ref: '#/components/schemas/PageOfNoteStores_allOf'
      description: A page of note stores
      type: object
    Text:
      description: A text
      properties:
        text:
          description: A text
          example: This is a text.
          type: string
      required:
      - text
      type: object
    Note:
      allOf:
      - $ref: '#/components/schemas/Text'
      - $ref: '#/components/schemas/Note_allOf'
      description: A clinical note
      # required:
      # - name
      type: object
    PageOfNotes:
      allOf:
      - $ref: '#/components/schemas/PageResponse'
      - $ref: '#/components/schemas/PageOfNotes_allOf'
      description: A page of notes
      type: object
    Health:
      description: Information about the health of the service
      example:
        status: pass
      properties:
        status:
          description: Health status
          enum:
          - pass
          - warn
          type: string
      type: object
    Service:
      description: Information about an NLP service
      example:
        license: Apache-2.0
        authorEmail: author@example.com
        author: Example Author
        name: awesome-date-annotator
        description: An awesome Date Annotator based on regex patterns
        repository: github:awesome-org/awesome-date-annotator
        version: 1.0.0
        url: https://openapi-generator.tech
      properties:
        name:
          description: The service name
          example: awesome-date-annotator
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        version:
          description: The version of the service (SemVer string)
          example: 1.0.0
          minLength: 1
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
        license:
          description: The license of this service (spdx.org/licenses Identifier)
          example: Apache-2.0
          type: string
        repository:
          description: The place where the code lives
          example: github:awesome-org/awesome-date-annotator
          type: string
        description:
          description: A short, one-sentence summary of the service
          example: An awesome Date Annotator based on regex patterns
          maxLength: 100
          type: string
        author:
          description: The author of the service
          example: Example Author
          type: string
        authorEmail:
          description: The email address of the author
          example: author@example.com
          format: email
          type: string
        url:
          description: The URL to the homepage of the service
          format: uri
          type: string
      type: object
    PageResponse_links:
      description: Links to navigate to different pages of results
      properties:
        next:
          description: Link to the next page of results
          format: uri
          type: string
    PageOfDatasets_allOf:
      properties:
        items:
          description: An array of datasets
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
    PageOfAnnotationStores_allOf:
      properties:
        items:
          description: An array of annotation stores
          items:
            $ref: '#/components/schemas/AnnotationStore'
          type: array
    StoredAnnotation_allOf:
      properties:
        noteId:
          description: The ID of the note the annotation is from
          type: string
    DateAnnotation_allOf:
      properties:
        format:
          description: Date format (ISO 8601)
          type: string
    PageOfAnnotations_allOf:
      properties:
        items:
          description: An array of annotations
          items:
            anyOf:
            - $ref: '#/components/schemas/StoredAnnotation'
            - $ref: '#/components/schemas/StoredDateAnnotation'
          type: array
    PageOfNoteStores_allOf:
      properties:
        items:
          description: An array of note stores
          items:
            $ref: '#/components/schemas/NoteStore'
          type: array
    Note_allOf:
      properties:
        name:
          description: The name of the note
          example: awesome-note
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        type:
          description: The note type (LOINC concept)
          example: loinc:LP29684-5
          type: string
    PageOfNotes_allOf:
      properties:
        items:
          description: An array of notes
          items:
            $ref: '#/components/schemas/Note'
          type: array
