name: ci

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint Dockerfiles
      uses: docker://hadolint/hadolint:latest
      with:
        entrypoint: hadolint
        args: server/Dockerfile
    - name: Check that packages in requirements.txt files are in asc order
      run: |
        sort -f --check server/requirements.txt
        sort -f --check server/test-requirements.txt

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set environment variables
      run: |
        cp .env.sample
        export $(grep -v '^#' .env | xargs -d '\n')
    - name: Validate docker-compose.yml
      run: docker-compose -f docker-compose.yml config

#   release:
#     needs: [test]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set variables
#         id: vars
#         run: |
#           echo ::set-output \
#             name=repository::tschaffter/${{ github.event.repository.name }}
#           echo ::set-output name=user::tschaffter
#           if [[ ${GITHUB_REF} = refs/tags/* ]]
#           then
#             echo ::set-output name=version::${GITHUB_REF#refs/tags/}
#             echo ::set-output name=push::true
#           else
#             echo ::set-output name=version::test
#             echo ::set-output name=push::false
#           fi

#       - name: Build Dockerfile.base
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#           repository: ${{ steps.vars.outputs.repository }}
#           tags: base-latest, base-${{ steps.vars.outputs.version }}
#           path: ./docker
#           dockerfile: ./docker/Dockerfile.base
#           build_args: "version=${{ steps.vars.outputs.version }}"
#           push: ${{ steps.vars.outputs.push }}
